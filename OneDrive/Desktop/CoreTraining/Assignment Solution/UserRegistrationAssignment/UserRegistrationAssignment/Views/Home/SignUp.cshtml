@model UserRegistrationAssignment.Models.User

@{
    ViewData["Title"] = "SignUp";
}

<h1>SignUp</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="SignUp">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmPassword" class="control-label"></label>
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Contact" class="control-label"></label>
                <input asp-for="Contact" class="form-control" />
                <span asp-validation-for="Contact" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender"  class="control-label"></label>
                @foreach (var c in System.Enum.GetValues(typeof(Gender)))
                {
                    <input type="radio" asp-for="Gender" value="@((int)c)" />
                    <label asp-for="Gender">@c</label>
                  
                }
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="AcceptTerms" /> @Html.DisplayNameFor(model => model.AcceptTerms)
                 
                </label>
                <span asp-validation-for="AcceptTerms" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
      <script>
            jQuery.validator.unobtrusive.adapters.add("chkbox", function (options) {
                // jQuery Validate equates "required" with "mandatory" for checkbox elements
                if (options.element.tagName.toUpperCase() == "INPUT" || options.element.type.toUpperCase() == "CHECKBOX") {
                    options.rules["required"] = true;
            if (options.message) {
                        options.messages["required"] = options.message;
            }
                }
            });
        </script>
}
